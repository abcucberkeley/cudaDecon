*** You must have an NVIDIA GPU and use a display driver that supports CUDA 8.0 (i.e. get the latest NVIDIA driver).  A card with 12GB of video RAM is suggested.  


*** Single GPU ***
If you are processing on the GPU that drives the display, Windows will terminate cudaDecon.exe if an iteration takes too long.  To set the windows display driver timeout to something larger (like 30 seconds instead of default 5 seconds) :
see http://stackoverflow.com/questions/17186638/modifying-registry-to-increase-gpu-timeout-windows-7

Running this command from an adminstrator command prompt should set the timeout to 30 :
reg.exe ADD "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\GraphicsDrivers" /v "TdrDelay" /t REG_DWORD /D "30" /f


*** Multiple GPUs ***
If multiple GPUs are present, run "set CUDA_VISIBLE_DEVICES 1" to select a different GPU the deconv code should execute on. Run "cudaDeconv -q" to enumerate GPUs.

If using a second GPU for computation only, you should try to use the TCC driver on this device (must be a Titan or Tesla or other GPU that supports TCC).  The TCC driver avoids the Windows display driver timeout issue and improves performance.  The computation-only card using the TCC driver must be initialized by the BIOS *after* the display GPU, so place the compute GPU card in a PCIe slot number that is > display GPU card.  

After correct card placement, use "C:\Program Files\NVIDIA Corporation\NVSMI\NVIDIAsmi.exe -L" from an administrator cmd window to list the GPUs, and use "-dm 1" to select the TCC driver. For example run "C:\Program Files\NVIDIA Corporation\NVSMI\NVIDIAsmi.exe -dm 1 -i 0" to set TCC driver on GPU 0. 


*** Example usage for CudaDecon ***

This assumes that you've copied the "GPU_decon" contents into e:\Cuda.  Also assumes that you've navigated to the folder that contains either the PSF (for the OTF gen) or the data (for the decon/deskew) from a command prompt.  An easy way to do this, is to hold Shift, then right-click the e:\Cuda\2016_02_19_example_decon_deskew_data folder in Windows Explorer, then select "Open command window here".  


Make the OTF run this command from the PSF folder:
e:\Cuda\otfgen.bat mbPSF_560_NAp5nap42_z100nm.tif mbOTF_560_NAp5nap42_z100nm.tif

Process the data (note that the path to the OTF file is the relative path from the current directory):
e:\Cuda\cudaDeconv -z .36 -D 32.8 -R 32.8 -i 10 -M 0 0 1 -S --input-dir . --filename-pattern sample_scan_560_20ms_zp36_cell1 --otf-file ../mbOTF_560_NAp5nap42_z100nm.tif --NoBleachCorrection --Pad 20

Note that you will need a GPU with enough memory to process the dataset. Also, note that the file extension is required for the OTF file, but should not be included in the name/string for the image.  The image string is just a character match, so it will process all files in the folder containing that string.

You can type cudaDeconv -h for a list of available parameters.


*** Best practices ***
Make a .bat batch file for deconvolving each data set to avoid typos and to keep a record of how it was deconvolved.  Try building upon the following template.  Save the following to a text file with a .bat file extenstion  :


set CUDA_VISIBLE_DEVICES=0

REM ****488****

SET myotf=Z:\2017-03-10\488otf_zp1_camA_2.tif

SET DECON=D:\GPU_decon\build\cudaDeconv.exe --drdata 0.105 -z .3 -Z .1 -D 32.8 -R 32.8 -l 0.488 -i 10 -u -M 0 0 1 -S --NoBleachCorrection --Pad 20

SET mypath1=Z:\2017-03-10\data1\Cell1
SET mypath2=Z:\2017-03-10\data1\Cell2

%DECON%  --input-dir %mypath1% --filename-pattern 488nm --otf-file %myotf% 
%DECON%  --input-dir %mypath2% --filename-pattern 488nm --otf-file %myotf% 


REM ****560****

SET myotf=Z:\2017-03-10\560otf_zp1_camA_2.tif

SET DECON=D:\GPU_decon\build\cudaDeconv.exe --drdata 0.105 -z .3 -Z .1 -D 32.8 -R 32.8 -l 0.560 -i 10 -u -M 0 0 1 -S --NoBleachCorrection --Pad 20

SET mypath1=Z:\2017-03-10\data1\Cell1
SET mypath2=Z:\2017-03-10\data1\Cell2

%DECON%  --input-dir %mypath1% --filename-pattern 560nm --otf-file %myotf% 
%DECON%  --input-dir %mypath1% --filename-pattern 560nm --otf-file %myotf% 
